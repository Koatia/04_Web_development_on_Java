/**
 * Задание: Класс «Эмуляция интернет-магазина».
 * <p>
 * 1. Написать классы
 * - покупатель (ФИО, возраст, телефон),
 * - товар (название, цена)
 * - заказ (объект покупатель, объект товар, целочисленное количество).
 * 2. Создать массив покупателей (инициализировать 2 элемента), массив товаров (инициализировать 5 элементов) и массив
 * заказов (пустой на 5 элементов).
 * 3. Создать статический метод «совершить покупку» со строковыми параметрами, соответствующими полям объекта заказа.
 * Метод должен вернуть объект заказа.
 * 4. Если в метод передан несуществующий покупатель – метод должен выбросить исключение CustomerException, если передан
 * несуществующий товар, метод должен выбросить исключение ProductException, если было передано отрицательное или
 * слишком больше значение количества (например, 100), метод должен выбросить исключение AmountException.
 * 5. Вызвать метод совершения покупки несколько раз таким образом, чтобы заполнить массив покупок возвращаемыми
 * значениями. Обработать исключения следующим образом (в заданном порядке):
 * – если был передан неверный товар – вывести в консоль сообщение об ошибке, не совершать данную покупку;
 * – если было передано неверное количество – купить товар в количестве 1;
 * – если был передан неверный пользователь – завершить работу приложения с исключением.
 * 6. Вывести в консоль итоговое количество совершённых покупок после выполнения основного кода приложения.
 */
public class SeminarWork {
    public static void main(String[] args) {

        Customer[] customers = Service.people;
        Item[] items = Service.items;
        Order[] orders = Service.orders;

        orders[0] = Service.buy(customers[0], items[0], 10); //good
        orders[1] = Service.buy(customers[1], items[1], -1); //bad amount -1
        orders[2] = Service.buy(customers[1], items[2], 150);  //bad amount >100
        orders[3] = Service.buy(customers[0], new Item("Flower", 10), 1);  //no item

        System.out.println(Service.printOrders(orders));

        orders[4] = Service.buy(new Customer("Fedor", 40, "+3-444-555-66-77"), items[3], 1);//no customer
    }
}

